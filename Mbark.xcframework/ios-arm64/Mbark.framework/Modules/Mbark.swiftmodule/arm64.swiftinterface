// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Mbark
import Combine
import CoreTelephony
import Foundation
@_exported import Mbark
import Network
import Security
import Swift
import SystemConfiguration
import UIKit
public enum MbarkEventType : Swift.String {
  case accept
  case background
  case input
  case longPress
  case reject
  case swipeLeft
  case swipeRight
  case tap
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
  public init?(rawValue: Swift.String)
}
@_hasMissingDesignatedInitializers public class MbarkInstance : Swift.CustomDebugStringConvertible {
  public var debugDescription: Swift.String {
    get
  }
  @objc deinit
  public func track(eventType: Mbark.MbarkEventType, step: Swift.String? = nil, component: Swift.String? = nil)
}
@_hasMissingDesignatedInitializers public class Mbark {
  @discardableResult
  public static func initialize(token apiToken: Swift.String, flushInterval: Swift.Double = MbarkConstants.flushInterval, instanceName: Swift.String = UUID().uuidString, mbarkUID: Swift.String, flowName: Swift.String, flowRevision: Swift.Int, selectedLanguage: Swift.String? = nil) -> Mbark.MbarkInstance
  public static func getInstance(name: Swift.String) -> Mbark.MbarkInstance?
  public static func mainInstance() -> Mbark.MbarkInstance
  public static func setMainInstance(name: Swift.String)
  public static func removeInstance(name: Swift.String)
  @objc deinit
}
public enum MbarkConstants {
  public static let flushInterval: Swift.Double
  public static let baseURL: Foundation.URL
}
extension Mbark.MbarkEventType : Swift.Equatable {}
extension Mbark.MbarkEventType : Swift.Hashable {}
extension Mbark.MbarkEventType : Swift.RawRepresentable {}
